// Don't edit this file!  It's software-generated.
// See convert.py script instead.

#define PALETTE1  0
#define PALETTE4  1
#define PALETTE8  2
#define TRUECOLOR 3

#define NUM_LEDS 30

// Blender-30px.png --------------------------------------------------------

const uint8_t PROGMEM palette00[][3] = {
  {   0,   0,   0 },
  { 140,  21,   3 },
  { 255,  21,   3 },
  { 140,  64,   3 },
  { 255,  64,   3 },
  {   0,   3,  21 },
  {   3,   3,  21 },
  {   0,  21,  21 },
  {   3,  21,  21 },
  {   0,   3,  64 },
  {   3,   3,  64 },
  {   0,  21,  64 },
  {   3,  21,  64 },
  { 255, 255, 255 } };

const uint8_t PROGMEM pixels00[] = {
  0XCC, 0XBC, 0XCD, 0XDD, 0XD2, 0X42, 0X22, 0X24,
  0X22, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X96,
  0XA5, 0XAD, 0XDD, 0XD2, 0X14, 0X14, 0X12, 0X32,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8B, 0X8C,
  0X7D, 0XDD, 0XD4, 0X21, 0X41, 0X41, 0X23, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAC, 0X9C, 0XAD,
  0XDD, 0XD2, 0X32, 0X22, 0X24, 0X22, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XB6, 0XC5, 0XCD, 0XDD,
  0XD2, 0X21, 0X41, 0X41, 0X23, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAB, 0X8C, 0XBD, 0XDD, 0XD2,
  0X32, 0X24, 0X12, 0X32, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8C, 0X9A, 0X6D, 0XDD, 0XD4, 0X23,
  0X21, 0X42, 0X24, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X98, 0XC7, 0XCD, 0XDD, 0XD2, 0X12, 0X42,
  0X23, 0X21, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XC9, 0XCA, 0XBD, 0XDD, 0XD2, 0X41, 0X23, 0X12,
  0X32, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA8,
  0X98, 0XAD, 0XDD, 0XD2, 0X14, 0X22, 0X42, 0X24,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X7C, 0XC9,
  0X8D, 0XDD, 0XD4, 0X21, 0X41, 0X23, 0X21, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAB, 0X6C, 0X9D,
  0XDD, 0XD2, 0X32, 0X24, 0X12, 0X32, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC6, 0XB8, 0XCD, 0XDD,
  0XD2, 0X21, 0X41, 0X24, 0X22, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X9C, 0XA9, 0X8D, 0XDD, 0XD2,
  0X32, 0X24, 0X12, 0X32, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8B, 0X8C, 0X9D, 0XDD, 0XD4, 0X23,
  0X21, 0X41, 0X23, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA8, 0X9C, 0X8D, 0XDD, 0XD2, 0X12, 0X42,
  0X24, 0X22, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XBA, 0XC5, 0XCD, 0XDD, 0XD2, 0X41, 0X23, 0X12,
  0X32, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA7,
  0XAC, 0X9D, 0XDD, 0XD2, 0X14, 0X22, 0X41, 0X23,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8C, 0XB8,
  0XCD, 0XDD, 0XD4, 0X21, 0X41, 0X24, 0X22, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X9C, 0X69, 0X8D,
  0XDD, 0XD2, 0X32, 0X24, 0X12, 0X32, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC5, 0XCC, 0X9D, 0XDD,
  0XD2, 0X21, 0X41, 0X24, 0X21, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAC, 0X98, 0XCD, 0XDD, 0XD2,
  0X32, 0X24, 0X12, 0X32, 0X00, 0X00, 0X00, 0X02,
  0X42, 0X40, 0X7C, 0X89, 0XCD, 0XDD, 0XD4, 0X23,
  0X21, 0X41, 0X20, 0X00, 0X42, 0X24, 0X21, 0X21,
  0X22, 0XA7, 0XAC, 0X5D, 0XDD, 0XD2, 0X12, 0X42,
  0X24, 0X20, 0X42, 0X14, 0X12, 0X32, 0X32, 0X32,
  0XCA, 0XB8, 0XCD, 0XDD, 0XD2, 0X41, 0X23, 0X12,
  0X32, 0X23, 0X22, 0X41, 0X24, 0X24, 0X00, 0X98,
  0XAB, 0XAD, 0XDD, 0XD2, 0X14, 0X22, 0X41, 0X23,
  0X22, 0X32, 0X14, 0X21, 0X00, 0X00, 0X8B, 0XC6,
  0XBD, 0XDD, 0XD4, 0X21, 0X41, 0X24, 0X22, 0X32,
  0X21, 0X42, 0X00, 0X00, 0X00, 0XAC, 0X5C, 0X6D,
  0XDD, 0XD2, 0X32, 0X24, 0X12, 0X32, 0X21, 0X42,
  0X00, 0X00, 0X00, 0X00, 0XB6, 0XCB, 0XCD, 0XDD,
  0XD2, 0X21, 0X41, 0X24, 0X21, 0X44, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAB, 0XA8, 0X9D, 0XDD, 0XD2,
  0X32, 0X24, 0X12, 0X32, 0X10, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8C, 0X7A, 0XCD, 0XDD, 0XD4, 0X23,
  0X21, 0X41, 0X24, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X98, 0XAB, 0X6D, 0XDD, 0XD2, 0X12, 0X42,
  0X24, 0X20, 0X00, 0X00, 0X00, 0X02, 0X24, 0X20,
  0XC9, 0XC8, 0XBD, 0XDD, 0XD2, 0X41, 0X23, 0X12,
  0X30, 0X00, 0X02, 0X24, 0X23, 0X21, 0X40, 0XA8,
  0X9C, 0XAD, 0XDD, 0XD2, 0X14, 0X22, 0X41, 0X00,
  0X02, 0X23, 0X21, 0X42, 0X32, 0X00, 0X7C, 0XC5,
  0XCD, 0XDD, 0XD4, 0X21, 0X41, 0X24, 0X22, 0X41,
  0X42, 0X32, 0X12, 0X20, 0X00, 0XAB, 0X6C, 0X5D,
  0XDD, 0XD2, 0X32, 0X14, 0X12, 0X32, 0X14, 0X12,
  0X24, 0X00, 0X00, 0X00, 0XC6, 0XBC, 0XCD, 0XDD,
  0XD2, 0X24, 0X22, 0X42, 0X23, 0X22, 0X24, 0X00,
  0X00, 0X00, 0X00, 0X9C, 0XA7, 0XAD, 0XDD, 0XD2,
  0X32, 0X32, 0X14, 0X12, 0X41, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8B, 0X8A, 0XBD, 0XDD, 0XD3, 0X21,
  0X23, 0X21, 0X42, 0X10, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA8, 0X9C, 0X6D, 0XDD, 0X22, 0X24, 0X22,
  0X42, 0X23, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XBA, 0XC7, 0XCD, 0XDD, 0X23, 0X21, 0X41, 0X23,
  0X20, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA7,
  0XAC, 0X9D, 0XDD, 0X42, 0X32, 0X14, 0X12, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8C, 0XB6,
  0XDD, 0XDD, 0X21, 0X24, 0X22, 0X42, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X9C, 0X6B, 0XDD,
  0XDD, 0X24, 0X12, 0X32, 0X10, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC5, 0XCC, 0XDD, 0XDD,
  0X21, 0X42, 0X23, 0X20, 0X00, 0X00, 0X24, 0X22,
  0X00, 0X00, 0X00, 0XAC, 0X98, 0XDD, 0XDD, 0X42,
  0X14, 0X12, 0X00, 0X04, 0X22, 0X32, 0X14, 0X00,
  0X00, 0X00, 0X7C, 0X89, 0XDD, 0XDD, 0X23, 0X22,
  0X42, 0X04, 0X21, 0X41, 0X23, 0X21, 0X00, 0X00,
  0X00, 0XA7, 0XAC, 0XDD, 0XDD, 0X22, 0X32, 0X13,
  0X22, 0X32, 0X24, 0X22, 0X40, 0X00, 0X00, 0X00,
  0XCA, 0XB8, 0XDD, 0XDD, 0X23, 0X24, 0X22, 0X32,
  0X23, 0X21, 0X40, 0X00, 0X00, 0X00, 0X00, 0X98,
  0XAB, 0XDD, 0XDD, 0X22, 0X12, 0X14, 0X23, 0X22,
  0X32, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8B, 0XC6,
  0XDD, 0XDD, 0X23, 0X24, 0X21, 0X22, 0X32, 0X20,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAC, 0X5C, 0XDD,
  0XDD, 0X42, 0X32, 0X14, 0X41, 0X24, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XB6, 0XCB, 0XDD, 0XDD,
  0X21, 0X24, 0X21, 0X22, 0X30, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAB, 0XA8, 0XDD, 0XDD, 0X24,
  0X12, 0X32, 0X32, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8C, 0X7A, 0XDD, 0XDD, 0X21, 0X42,
  0X24, 0X23, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X98, 0XAB, 0XDD, 0XDD, 0X24, 0X14, 0X11,
  0X20, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XC9, 0XC8, 0XDD, 0XDD, 0X41, 0X22, 0X42, 0X30,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA8,
  0X9C, 0XDD, 0XDD, 0X22, 0X32, 0X14, 0X20, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X7C, 0XC5,
  0XDD, 0XDD, 0X23, 0X21, 0X41, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAB, 0X6C, 0XAD,
  0XDD, 0X22, 0X42, 0X24, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC6, 0XBC, 0X7D, 0XDD,
  0X41, 0X14, 0X12, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X9C, 0XA7, 0XAD, 0XDD, 0XD2,
  0X42, 0X23, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8B, 0X8A, 0XCD, 0XDD, 0XD2, 0X13,
  0X22, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA8, 0X9C, 0X5D, 0XDD, 0XD4, 0X22, 0X32,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XBA, 0XC7, 0XCD, 0XDD, 0XD2, 0X32, 0X23, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA7,
  0XAC, 0XAD, 0XDD, 0XD2, 0X21, 0X42, 0X20, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8C, 0XB6,
  0XBD, 0XDD, 0XD2, 0X32, 0X14, 0X10, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X9C, 0X6B, 0X6D,
  0XDD, 0XD4, 0X14, 0X22, 0X40, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC5, 0XCC, 0XCD, 0XDD,
  0XD2, 0X22, 0X32, 0X10, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAC, 0X98, 0X9D, 0XDD, 0XD2,
  0X31, 0X23, 0X20, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X7C, 0X89, 0XCD, 0XDD, 0XD2, 0X24,
  0X22, 0X42, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA7, 0XAC, 0X6D, 0XDD, 0XD4, 0X12, 0X32,
  0X14, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XCA, 0XB8, 0XBD, 0XDD, 0XD2, 0X32, 0X23, 0X21,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X98,
  0XAB, 0XAD, 0XDD, 0XD2, 0X21, 0X42, 0X24, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8B, 0XC6,
  0XCD, 0XDD, 0XD2, 0X32, 0X14, 0X12, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAC, 0X5C, 0X5D,
  0XDD, 0XD4, 0X24, 0X21, 0X41, 0X20, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XB6, 0XCB, 0XCD, 0XDD,
  0XD2, 0X12, 0X32, 0X24, 0X10, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAB, 0XA8, 0XAD, 0XDD, 0XD2,
  0X32, 0X23, 0X22, 0X40, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8C, 0X7A, 0XBD, 0XDD, 0XD2, 0X23,
  0X22, 0X32, 0X10, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X98, 0XAB, 0X6D, 0XDD, 0XD4, 0X12, 0X32,
  0X23, 0X20, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XC9, 0XC8, 0XCD, 0XDD, 0XD2, 0X42, 0X23, 0X22,
  0X40, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA8,
  0X9C, 0X9D, 0XDD, 0XD2, 0X12, 0X32, 0X23, 0X20,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X7C, 0XC5,
  0XCD, 0XDD, 0XD2, 0X32, 0X23, 0X22, 0X30, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAB, 0X6C, 0X6D,
  0XDD, 0XD4, 0X23, 0X22, 0X32, 0X20, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC6, 0XBC, 0XBD, 0XDD,
  0XD2, 0X12, 0X32, 0X23, 0X20, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X9C, 0XA7, 0XAD, 0XDD, 0XD2,
  0X42, 0X23, 0X22, 0X40, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X8B, 0X8A, 0XCD, 0XDD, 0XD2, 0X14,
  0X12, 0X41, 0X20, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA8, 0X9C, 0X5D, 0XDD, 0XD4, 0X12, 0X41,
  0X24, 0X12, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XBA, 0XC7, 0XCD, 0XDD, 0XD2, 0X41, 0X24, 0X12,
  0X41, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0XA7,
  0XAC, 0XAD, 0XDD, 0XD2, 0X12, 0X32, 0X23, 0X22,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8C, 0XB6,
  0XBD, 0XDD, 0XD2, 0X42, 0X23, 0X22, 0X41, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X9C, 0X6B, 0X6D,
  0XDD, 0XD4, 0X14, 0X12, 0X41, 0X24, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XC5, 0XCC, 0XCD, 0XDD,
  0XD2, 0X12, 0X41, 0X24, 0X12, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00, 0XAC, 0X98, 0X9D, 0XDD, 0XD2,
  0X41, 0X24, 0X12, 0X41, 0X00, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X7C, 0X89, 0XCD, 0XDD, 0XD2, 0X14,
  0X12, 0X41, 0X24, 0X00, 0X00, 0X00, 0X00, 0X00,
  0X00, 0XA7, 0XAC, 0X6D, 0XDD, 0XD4, 0X22, 0X41,
  0X24, 0X21, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00,
  0XCA, 0XB8, 0XBD, 0XDD, 0XD2, 0X32, 0X14, 0X21,
  0X42, 0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X98,
  0XAB, 0XAD, 0XDD, 0XD2, 0X12, 0X41, 0X24, 0X12,
  0X00, 0X00, 0X00, 0X00, 0X00, 0X00, 0X8B, 0XC6,
  0XCD, 0XDD, 0XD2, 0X41, 0X24, 0X12, 0X41, 0X00,
  0X00, 0X00, 0X00, 0X00, 0X00, 0XAC, 0X6B, 0X8D,
  0XDD, 0XD4, 0X14, 0X12, 0X41, 0X24, 0X00, 0X00,
  0X00, 0X00, 0X00, 0X00, 0XB9, 0XBA, 0X9D, 0XDD,
  0XD2, 0X22, 0X42, 0X24, 0X22, 0X00, 0X00, 0X00,
  0X00, 0X00, 0X00 };

typedef struct {
  uint8_t        type;    // PALETTE[1,4,8] or TRUECOLOR
  line_t         lines;   // Length of image (in scanlines)
  const uint8_t *palette; // -> PROGMEM color table (NULL if truecolor)
  const uint8_t *pixels;  // -> Pixel data in PROGMEM
} image;

const image PROGMEM images[] = {
  { PALETTE4 ,  101, (const uint8_t *)palette00, pixels00 }
};

#define NUM_IMAGES (sizeof(images) / sizeof(images[0]))
